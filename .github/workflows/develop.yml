name: Auto PR from develop to feature branches

on:
  push:
    branches:
      - develop  # Trigger when commits are pushed to the develop branch

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-create-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch all branches
        run: git fetch --all

      - name: Get feature branches
        id: get_branches
        run: |
          # Get all branches starting with 'feature/'
          branches=$(git branch -r | grep 'origin/feature/' | sed 's|origin/||')
          echo "branches=$branches" >> $GITHUB_ENV
          echo "branches=$branches"  # Debug output for branches

      - name: Debug feature branches
        run: |
          echo "Feature branches: ${{ env.branches }}"

      - name: Create PR for each feature branch
        id: create_prs
        run: |
          pr_urls=""
          for branch in ${{ env.branches }}; do
            # Check if a PR already exists between develop and the feature branch
            existing_pr=$(gh pr list --base develop --head $branch --json url -q '.[].url')

            if [ -n "$existing_pr" ]; then
              echo "PR already exists: $existing_pr"
              pr_urls="$pr_urls $existing_pr"
            else
              # Create a new pull request from develop to the feature branch and capture the URL from the output
              pr_url=$(gh pr create --base develop --head $branch --title "Auto PR from develop to $branch" --body "This is an automated pull request from develop to $branch." | grep -oP 'https://github.com/\S+')
              pr_urls="$pr_urls $pr_url"
            fi
          done
          echo "pr_urls=$pr_urls" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto approve pull requests
        run: |
          for pr_url in ${{ env.pr_urls }}; do
            pr_number=$(echo $pr_url | grep -oP '\d+$')

            # Get the creator of the PR to check if it's the bot
            pr_creator=$(gh pr view $pr_number --json author -q .author.login)
            echo "PR #$pr_number created by $pr_creator"

            # Skip approval if the creator is the bot (either github-actions[bot] or app/github-actions)
            if [[ "$pr_creator" != "github-actions[bot]" && "$pr_creator" != "app/github-actions" ]]; then
              echo "Approving PR #$pr_number"
              gh pr review $pr_number --approve
            else
              echo "Skipping approval for PR #$pr_number (created by bot)"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check auto-merge status and merge if not enabled
        run: |
          for pr_url in ${{ env.pr_urls }}; do
            pr_number=$(echo $pr_url | grep -oP '\d+$')

            # Check if auto-merge is available and enabled
            auto_merge_state=$(gh pr view $pr_number --json autoMergeState -q .autoMergeState)
            if [[ "$auto_merge_state" == "ENABLED" ]]; then
              echo "Auto-merge is enabled for PR #$pr_number."
            else
              echo "Auto-merge is not enabled for PR #$pr_number."

              # Check if auto-merge option is available (i.e., if we can enable it)
              can_enable_auto_merge=$(gh pr view $pr_number --json autoMergeable -q .autoMergeable)
              if [[ "$can_enable_auto_merge" == "true" ]]; then
                echo "Auto-merge is available for PR #$pr_number. Enabling auto-merge."
                gh pr merge --auto $pr_number
              else
                # If auto-merge is not available, manually merge the PR
                echo "Auto-merge is not available for PR #$pr_number. Merging manually."
                gh pr merge $pr_number --merge --admin --body "Merging PR #$pr_number."
              fi
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
