name: Merge develop to feature branches

on:
  push:
    branches:
      - develop

permissions:
  pull-requests: write

jobs:
  develop-to-features:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch all branches
        run: git fetch --all

      - name: List all branches
        run: git branch -r

      - name: Get feature branches
        id: get_branches
        run: |
          branches=$(git branch -r | grep 'origin/feature/' | sed 's|origin/||')
          echo "branches=$branches" >> $GITHUB_ENV
          echo "branches=$branches"

      - name: Debug feature branches
        run: |
          echo "Feature branches: ${{ env.branches }}"

      - name: Create pull requests
        id: create_prs
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source-branch: develop
          commit-message: 'Auto PR from develop to feature branches'
          title: 'Auto PR from develop to feature branches'
          body: 'This is an automated pull request from develop to feature branches.'
          branch: ${{ env.branches }}

      - name: Auto approve pull requests
        if: steps.create_prs.outputs.pull-request-url
        run: |
          for pr_url in ${{ steps.create_prs.outputs.pull-request-url }}; do
            pr_number=$(echo $pr_url | grep -oP '\d+$')
            gh pr review $pr_number --approve
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.create_prs.outputs.pull-request-url
        run: |
          for pr_url in ${{ steps.create_prs.outputs.pull-request-url }}; do
            pr_number=$(echo $pr_url | grep -oP '\d+$')
            gh pr merge $pr_number --auto --merge
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}